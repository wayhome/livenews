name: Fetch HackerNews Stories

on:
  schedule:
    - cron: "0 0,4,9,13 * * *" # 北京时间 8:00, 12:00, 17:00, 21:00
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write
  pages: write

jobs:
  fetch-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create public directory
        run: mkdir -p public

      # 恢复缓存的步骤
      - name: Restore cache
        uses: actions/cache@v4
        id: cache
        with:
          path: cache/story_cache.json
          key: story-cache-${{ github.run_id }}
          restore-keys: |
            story-cache-

      # 如果缓存存在则复制到工作目录
      - name: Setup cache file
        run: |
          mkdir -p cache
          if [ -f cache/story_cache.json ]; then
            echo "找到缓存文件，复制到工作目录"
            mkdir -p public
            cp cache/story_cache.json public/
          else
            echo "未找到缓存文件，将创建新的缓存"
          fi

      - name: Fetch stories and generate HTML
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_BASE: ${{ vars.OPENAI_API_BASE }}
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL }}
          PYTHONUNBUFFERED: 1
        run: |
          echo "=== 环境检查 ==="
          echo "Python 版本:"
          python --version

          # 检查环境变量
          if [ -n "$OPENAI_API_KEY" ]; then
            echo "OPENAI_API_KEY: 已设置"
          else
            echo "OPENAI_API_KEY: 未设置"
            exit 1
          fi

          # 显示变量值（因为这些不是敏感信息）
          echo "OPENAI_API_BASE: ${OPENAI_API_BASE:-使用默认值}"
          echo "OPENAI_MODEL: ${OPENAI_MODEL:-使用默认值}"

          echo "================"
          python scripts/fetch_hn.py

      # 保存缓存文件
      - name: Save cache file
        run: |
          if [ -f public/story_cache.json ]; then
            echo "保存缓存文件到缓存目录"
            cp public/story_cache.json cache/
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          keep_files: false
